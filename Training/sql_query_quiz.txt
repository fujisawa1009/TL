-- 基本操作
-- 1. MySQLサーバーにログインするコマンドを記述する。
-- 2. 利用可能なデータベースを表示するクエリを記述する。
-- 3. データベース `school` を作成するクエリを記述する。
-- 4. データベース `school` を使用するクエリを記述する。

-- テーブル操作
-- 5. `students` テーブルを作成し、`id` (INT, 主キー), `name` (VARCHAR), `age` (INT) を含む。
-- 6. `students` テーブルにデータを1件挿入する (`id=1, name='Alice', age=20`)。
-- 7. `students` テーブルのすべてのデータを取得する。
-- 8. テーブルに列 `gender` (VARCHAR) を追加する。
-- 9. 列 `gender` のデータ型を変更して ENUM('male', 'female') にする。
-- 10. テーブルの名前を `classmates` に変更する。
-- 11. テーブルを削除する。

-- データ挿入と更新
-- 12. テーブル `students` を再作成し、データを複数行一括挿入する。
-- 13. 学生の名前 `Alice` の年齢を21に更新する。
-- 14. `students` テーブルのすべてのデータを削除する。
-- 15. 特定の条件 (`age > 18`) に一致する行を削除する。

-- データ取得 (SELECT)
-- 16. 学生の名前を昇順で取得するクエリを記述する。
-- 17. 学生の年齢の平均値を取得する。
-- 18. 年齢が最大の学生を取得する。
-- 19. `age` が 20 の学生を取得する。
-- 20. `name` に `A` を含む学生を取得する。
-- 21. `gender` が 'female' の学生数をカウントする。
-- 22. `gender` 別に学生をグループ化し、それぞれの人数を表示する。
-- 23. 重複した名前を削除して表示する。

-- 条件付き取得
-- 24. 学生の名前と年齢を、`age` が 18 以上の学生だけ取得する。
-- 25. `age` が 18 と 25 の間の学生を取得する。
-- 26. 条件を OR で結合して、名前が 'Alice' または年齢が 20 の学生を取得する。

-- JOIN
-- 27. `classes` テーブル (id, name) を作成する。
-- 28. `students` に列 `class_id` を追加する。
-- 29. `students` と `classes` を結合して、クラス名と学生名を取得する。
-- 30. LEFT JOIN を使用してすべてのクラスとその学生を取得する。

-- 集約関数とサブクエリ
-- 31. 各クラスの平均年齢を取得する。
-- 32. 年齢が平均より高い学生を取得する。
-- 33. サブクエリを使用して、最も若い学生を取得する。

-- インデックスと制約
-- 34. `students` テーブルの `name` 列にインデックスを追加する。
-- 35. `class_id` 列に外部キー制約を追加する。
-- 36. 外部キー制約を削除する。

-- トランザクション
-- 37. トランザクションを開始し、データを挿入する。
-- 38. トランザクションをロールバックする。
-- 39. トランザクションをコミットする。

-- ユーザーと権限
-- 40. `user1` という新しいユーザーを作成し、パスワードを設定する。
-- 41. `school` データベースへの SELECT 権限を `user1` に付与する。
-- 42. `user1` の権限をリボークする。

-- 応用クエリ
-- 43. 学生数が 2 人以上のクラスを取得する。
-- 44. テーブル `students` を CSV ファイルにエクスポートする。
-- 45. CSV ファイルからデータを `students` テーブルにインポートする。
-- 46. データベースのバックアップを取得する。
-- 47. 特定のテーブルを復元する。

-- その他
-- 48. テーブル `students` の構造を確認する。
-- 49. MySQL のバージョンを確認する。
-- 50. すべてのデータベースを削除するクエリを記述する。
